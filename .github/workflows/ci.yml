name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Many color libraries just need this to be set to any value, but at least
  # one distinguishes color depth, where "3" -> "256-bit color".
  FORCE_COLOR: 3

jobs:
  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v6
        with:
          python-version: "3.x"

      - uses: astral-sh/setup-uv@v6

      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --hook-stage manual --all-files

  #      - name: Run Pylint
  #        run: uvx nox -s pylint -- --output-format=github

  checks:
    name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    needs: [pre-commit]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        runs-on: [ubuntu-latest, windows-latest, macos-latest]

    env:
      QT_QPA_PLATFORM: offscreen

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - uses: astral-sh/setup-uv@v6

      - name: Install Qt deps (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libegl1 libopengl0 \
            libxkbcommon-x11-0 libxcb-xinerama0 libxcb-cursor0 \
            libxcb-keysyms1 libxcb-image0 libxcb-render-util0 \
            xvfb

      - name: Install package
        run: uv sync

      - name: Test package (Linux headless)
        if: runner.os == 'Linux'
        run: |
          xvfb-run -a uv run pytest -ra --cov --cov-report=xml --cov-report=term --durations=20

      - name: Test package (non-Linux)
        if: runner.os != 'Linux'
        run:
          uv run pytest -ra --cov --cov-report=xml --cov-report=term
          --durations=20

      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
